@layout LoginLayout
@page "/"
@inject IAuthServiceClient AuthService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Aurora HRM | Login</PageTitle>
<div id="app">
    <div style="position:absolute; top:40vh; width:100%;">
        <div id="customanimate">
            <div style="text-align:center;" class="animate__animated animate__pulse animate__infinite animate__delay-2s">
                <img src="ahrm.png" alt="Alternate Text" width="100" />
            </div>
        </div>
        <br />
        <div style="display:flex; gap:10px; justify-content:center; align-items:center; position:relative;top:-200px;">
            <div class="animate__animated animate__fadeIn animate__delay-1s">
                <div class="row">
                    <div style="text-align:center;">
                        <h3>Login</h3>
                        <hr />
                        <div class="row">
                            @if (alertMessageShow)
                            {
                                <div class="animate__animated animate__fadeIn">
                                    <div class="animate__animated animate__fadeOut animate__delay-5s">
                                        <p class="text-danger" style="padding-bottom: 4px;">@errorMessage</p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <EditForm Model="user" OnValidSubmit="HandleLogin">
                            <DataAnnotationsValidator />
                            <div class="row card shadow-sm" style = "width: 8cm">
                                <br />
                                <div class="mb-3">
                                    <label for="email"><small><b>Email</b></small></label>
                                    <br />
                                    <InputText id="email" @bind-Value="user.Email" type="email" class="form-control"></InputText>
                                    <ValidationMessage For="@(() =>user.Email)" />
                                </div>
                                <div class="mb-3">
                                    <label for="password"><small><b>Password</b></small></label>
                                    <br />
                                    <InputText id="password" @bind-Value="user.Password" type="password" class="form-control"></InputText>
                                    <ValidationMessage For="@(() =>user.Password)" />
                                </div>
                                <br />
                            </div>
                            <br />
                            <br />
                            <div style="text-align: center;">
                                <button type="submit" class="btn btn-primary" style="width:180px">Login</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UserLogin user = new UserLogin();

    private string errorMessage = string.Empty;

    private bool alertMessageShow = false;

    private async Task HandleLogin()
    {
        var result = await AuthService.Login(user);
        if (result.Success)
        {
            errorMessage = string.Empty;
            await LocalStorage.SetItemAsync("authToken", result.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
            NavigationManager.NavigateTo("home");
        }
        else
        {
            errorMessage = result.Message;
            alertMessageShow = true;
            //removes alert message after some time
            await InvokeAsync(() => StateHasChanged());
            await Task.Delay(6000);
            alertMessageShow = false;
        }
    }
}
